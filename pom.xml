<project>
  <modelVersion>4.0.0</modelVersion>
  <packaging>pom</packaging>

  <name>hpd Parent</name>
  <artifactId>hpd-parent</artifactId>

  <!-- we're using the git hash + timestamp as the service version -->
  <!-- see configuration of maven-jar-plugin below -->
  <!-- that means the version below should not need to change -->
  <version>0.0.1-SNAPSHOT</version>

  <parent>
    <groupId>com.davidxia</groupId>
    <artifactId>maven-root</artifactId>
    <version>2-SNAPSHOT</version>
  </parent>

  <modules>
    <module>hpd-parser</module>
    <module>hpd-model</module>
    <module>hpd-store</module>
    <module>hpd-postgres-store</module>
  </modules>

  <properties>
    <findbugs.excludeFilterFile>findbugsexclude.xml</findbugs.excludeFilterFile>

    <!-- versions -->
    <slf4j.version>1.7.21</slf4j.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.davidxia</groupId>
        <artifactId>hpd-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.davidxia</groupId>
        <artifactId>hpd-store</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.davidxia</groupId>
        <artifactId>hpd-postgres-store</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.davidxia</groupId>
        <artifactId>hpd-parser</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>19.0</version>
      </dependency>
      <dependency>
        <groupId>io.norberg</groupId>
        <artifactId>auto-matter</artifactId>
        <version>0.13.0</version>
      </dependency>
      <dependency>
        <groupId>io.norberg</groupId>
        <artifactId>auto-matter-annotation</artifactId>
        <version>0.13.0</version>
      </dependency>
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>9.4-1201-jdbc41</version>
      </dependency>
      <dependency>
        <groupId>com.typesafe</groupId>
        <artifactId>config</artifactId>
        <version>1.2.1</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.21</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>

      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>com.spotify.checkstyle</groupId>
            <artifactId>spotify-checkstyle-config</artifactId>
            <version>1.0.2</version>
          </dependency>
        </dependencies>
        <configuration>
          <configLocation>spotify_checks.xml</configLocation>
          <consoleOutput>false</consoleOutput>
          <violationSeverity>warning</violationSeverity>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>

      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>

    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>2.3</version>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>coverage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.7.4.201502262128</version>
            <configuration>
              <excludes>
                <exclude>**/*Builder.*</exclude>
                <exclude>**/*Value.*</exclude>
                <exclude>**/AutoValue_.*</exclude>
              </excludes>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>build-docker-image</id>
      <activation>
        <file>
          <exists>${basedir}/.build-as-service</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
            <version>1.4</version>
            <executions>
              <execution>
                <id>create-timestamp</id>
                <phase>validate</phase>
                <goals>
                  <goal>create-timestamp</goal>
                </goals>
                <configuration>
                  <timezone>UTC</timezone>
                  <timestampFormat>yyyyMMdd'T'HHmmss</timestampFormat>
                  <timestampPropertyName>buildTimestamp</timestampPropertyName>
                </configuration>
              </execution>
              <execution>
                <id>create-revision</id>
                <phase>validate</phase>
                <goals>
                  <goal>create</goal>
                </goals>
                <configuration>
                  <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                  <doCheck>false</doCheck>
                  <doUpdate>false</doUpdate>
                  <shortRevisionLength>7</shortRevisionLength>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>2.10</version>
            <executions>
              <execution>
                <phase>prepare-package</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <useBaseVersion>false</useBaseVersion>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>true</overWriteSnapshots>
              <includeScope>runtime</includeScope>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
            </configuration>
          </plugin>

          <plugin>
            <artifactId>maven-jar-plugin</artifactId>
            <version>2.6</version>
            <configuration>
              <archive>
                <addMavenDescriptor>true</addMavenDescriptor>
                <manifest>
                  <addClasspath>true</addClasspath>
                  <classpathPrefix>lib/</classpathPrefix>
                  <mainClass>${jar.entrypoint}</mainClass>
                </manifest>
                <manifestEntries>
                  <Implementation-Version>${buildNumber}-${buildTimestamp}</Implementation-Version>
                </manifestEntries>
              </archive>
            </configuration>
          </plugin>


          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
            <version>1.2.1</version>
            <configuration>
              <repository>registry.spotify.net/spotify/${project.artifactId}</repository>
              <tag>${buildTimestamp}-${buildNumber}</tag>
            </configuration>
            <executions>
              <execution>
                <id>default</id>
                <goals>
                  <goal>build</goal>
                  <goal>push</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!--
          after building the docker image, we no longer need the jars that are downloaded to
          ${project.build.directory}/lib.

          The reason for doing this is pretty dumb: the way that Jenkins' pipelines-conventions
          pass state of the project from one step to the next is to tar the whole workspace and copy
          it to the next build's workspace. Each of our service's (there are four today) end up
          with ~47mb of jars in ${project.build.directory}/lib, and eventually this compounds into
          Tugboat's workspace on Jenkins using ~55gb or more.
          -->
          <plugin>
            <artifactId>maven-clean-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
              <execution>
                <id>clean-out-lib-after-docker-build-to-save-jenkins-from-dying</id>
                <goals>
                  <goal>clean</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <excludeDefaultDirectories>true</excludeDefaultDirectories>
                  <filesets>
                    <fileset>
                      <directory>${project.build.directory}/lib</directory>
                      <includes>
                        <include>*.jar</include>
                      </includes>
                    </fileset>
                  </filesets>
                </configuration>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>
  </profiles>

</project>
